openapi: 3.1.0
info:
  title: Trust Claim
  description: ""
  version: 1.0.0
servers:
  - url: http://localhost:9000
    description: Local server
  - url: https://dev.linkedtrust.us
    description: Development server
  - url: https://live.linkedtrust.us
    description: Production server

paths:
  "/auth/login":
    post:
      tags:
        - Authentication
      description: Login the user (generate new refresh and access tokens)
      summary: Login the user (generate new refresh and access tokens)
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/requestBodies/Auth"
      responses:
        "200":
          description: Logged in successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Authentication"
        "401":
          description: Invalid email/password
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Error"

  "/auth/signup":
    post:
      tags:
        - Authentication
      description: Signup the user
      summary: Signup the user
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/requestBodies/Auth"
      responses:
        "201":
          description: Signed up the user
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Message"
        "409":
          description: Email already exists
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Error"
        "500":
          description: Invalid email/password or internal server error
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Error"

  "/auth/refresh_token":
    post:
      tags:
        - Authentication
      description: Refresh the access token using the refresh token
      summary: Refresh the access token using the refresh token
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/requestBodies/RefreshToken"
      responses:
        "200":
          description: Refreshed the token
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Authentication"
        "500":
          description: Invalid body/invalid or expired token/internal server error
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Error"

  "/api/claimsfeed2":
    get:
      tags:
        - Claims
      description: List the claims
      summary: List the claims
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          schema:
            type: integer
            example: 15
        - name: search
          in: query
          schema:
            type: string
            example: magdi yacoub
            nullable: true
      responses:
        "200":
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Claims"

  "/api/claims/v3":
    get:
      tags:
        - Claims
      description: List the claims using a cursor instead of page number (more performant)
      summary: List the claims
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            example: 100
            minimum: 1
            maximum: 10000
            nullable: true
        - name: search
          in: query
          schema:
            type: string
            nullable: true
        - name: nextPage
          in: query
          schema:
            type: string
            format: byte
            nullable: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  nextPage:
                    type: string
                    format: byte
                    nullable: true
                  claims:
                    "$ref": "#/components/schemas/FeedClaimsV3"

  "/api/claim":
    post:
      tags:
        - Claims
      description: Create Claim
      summary: Create Claim
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/requestBodies/CreateClaim"
      responses:
        "201":
          description: Created the claim successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreatedClaim"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Error"
        "500":
          description: Invalid body/internal server error
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Error"

  "/api/claim/v2":
    post:
      tags:
        - Claims
      description: Create Claim (images as stream)
      summary: Create Claim
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/requestBodies/CreateClaimV2"
            encoding:
              images:
                contentType: image/*
              dto:
                contentType: application/json

      responses:
        "201":
          description: Created the claim successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreatedClaim"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Error"
        "500":
          description: Invalid body/internal server error
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Error"

  "/api/claim/{id}":
    get:
      tags:
        - Claims
      description: Get Claim
      summary: Get Claim
      parameters:
        - name: id
          in: path
          description: Claim ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Created the claim successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreatedClaim"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Error"

  "/api/credential":
    post:
      tags:
        - Credentials
      description: Create Claim from Linked Claims' credential
      summary: Create Claim from Linked Claims' credential
      security:
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/requestBodies/CreateCredential"

      responses:
        "201":
          description: Created the claim successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreatedClaim"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Error"
        "500":
          description: Invalid body/internal server error
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/Error"

components:
  schemas:
    Claims:
      type: array
      items:
        "$ref": "#/components/schemas/Claim"

    FeedClaimsV3:
      type: array
      items:
        "$ref": "#/components/schemas/FeedClaimV3"

    Claim:
      type: object
      required:
        - id
        - name
        - link
        - claim_id
        - statement
        - effective_date
        - how_known
        - claim
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        thumbnail:
          type: string
        link:
          type: string
        description:
          type: string
        claim_id:
          type: integer
          format: int32
        statement:
          type: string
        stars:
          type: integer
        score:
          type: integer
        amt:
          type: integer
        effective_date:
          type: string
          format: date-time
        how_known:
          type: string
        aspect:
          type: string
        confidence:
          type: integer
        claim:
          type: string
        basis:
          type: string
        source_name:
          type: string
        source_thumbnail:
          type: string
        source_link:
          type: string
        source_description:
          type: string

    FeedClaimV3:
      type: object
      required:
        - name
        - link
        - claim_id
        - statement
        - effective_date
      properties:
        name:
          type: string
        link:
          type: string
        claim_id:
          type: integer
          format: int32
        statement:
          type: string
        stars:
          type: integer
          maximum: 5
        effective_date:
          type: string
          format: date-time

    Image:
      type: object
      properties:
        id:
          type: integer
          format: int32
        claimId:
          type: integer
          format: int32
        url:
          type: string
        digetedMultibase:
          type: string
        metadata:
          type: object
          properties:
            captian:
              type: string
            description:
              type: string
        effectiveDate:
          type: string
          format: date-time
        createdDate:
          type: string
          format: date-time
        owner:
          type: string
        signature:
          type: string
    CreatedClaim:
      type: object
      properties:
        claim:
          $ref: "#/components/schemas/Claim"
        claimData:
          type: object
          properties:
            id:
              type: integer
              format: int32
            claimId:
              type: integer
              format: int32
            name:
              type: string
        claimImages:
          type: array
          items:
            $ref: "#/components/schemas/Image"

  requestBodies:
    Auth:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
          format: password

    RefreshToken:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string

    CreateClaim:
      type: object
      required:
        - subject
        - claim
        - name
      properties:
        subject:
          type: string
        claim:
          type: string
        object:
          type: string
          nullable: true
        statement:
          type: string
          nullable: true
        aspect:
          type: string
          nullable: true
        amt:
          type: integer
          nullable: true
        name:
          type: string
        howKnown:
          type: string
          nullable: true
          enum:
            - FIRST_HAND
            - SECOND_HAND
            - WEB_DOCUMENT
            - VERIFIED_LOGIN
            - BLOCKCHAIN
            - SIGNED_DOCUMENT
            - PHYSICAL_DOCUMENT
            - INTEGRATION
            - RESEARCH
            - OPINION
            - OTHER
        images:
          type: array
          items:
            type: object
            required:
              - url
              - signature
              - owner
            properties:
              url:
                type: string
              metadata:
                type: object
                nullable: true
                properties:
                  captian:
                    type: string
                  description:
                    type: string
              effectiveDate:
                type: string
                format: date-time
                nullable: true
              digestMultibase:
                type: string
                nullable: true
              signature:
                type: string
              owner:
                type: string
        sourceURI:
          type: string
          nullable: true
        effectiveDate:
          type: string
          format: date-time
          nullable: true
        confidence:
          type: integer
          nullable: true
        claimAddress:
          type: string
          nullable: true
        stars:
          type: integer
          nullable: true

    CreateClaimV2:
      type: object
      required:
        - dto
        - images
      properties:
        images:
          type: array
          items:
            type: string
            format: binary
        dto:
          type: object
          required:
            - subject
            - claim
            - name
          properties:
            subject:
              type: string
            claim:
              type: string
            object:
              type: string
              nullable: true
            statement:
              type: string
              nullable: true
            aspect:
              type: string
              nullable: true
            amt:
              type: integer
              nullable: true
            name:
              type: string
            howKnown:
              type: string
              nullable: true
              enum:
                - FIRST_HAND
                - SECOND_HAND
                - WEB_DOCUMENT
                - VERIFIED_LOGIN
                - BLOCKCHAIN
                - SIGNED_DOCUMENT
                - PHYSICAL_DOCUMENT
                - INTEGRATION
                - RESEARCH
                - OPINION
                - OTHER
            sourceURI:
              type: string
              nullable: true
            effectiveDate:
              type: string
              format: date-time
              nullable: true
            confidence:
              type: integer
              nullable: true
            claimAddress:
              type: string
              nullable: true
            stars:
              type: integer
              nullable: true
            images:
              type: array
              items:
                type: object
                properties:
                  metadata:
                    type: object
                    nullable: true
                    properties:
                      captian:
                        type: string
                        nullable: true
                      description:
                        type: string
                        nullable: true
                  effectiveDate:
                    type: string
                    format: date-time
                    nullable: true
                  digestMultibase:
                    type: string
                    nullable: true

    CreateCredential:
      type: object
      properties:
        "@contenxt":
          type: array
          items:
            anyOf:
              - type: string
              - type: object
                properties:
                  duration:
                    type: string
                  fullName:
                    type: string
                  portfolio:
                    type: string
                  evidenceLink:
                    type: string
                  evidenceDescription:
                    type: string
                  credentialType:
                    type: string
        id:
          type: string
        type:
          type: array
          items:
            type: string
        issuer:
          type: object
          properties:
            id:
              type: string
            type:
              type: array
              items:
                type: string
        issuanceDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        credentialSubject:
          type: object
          properties:
            type:
              type: array
              items:
                type: string
            name:
              type: string
            portfolio:
              type: array
              items:
                type: object
                properties:
                  "@type":
                    type: string
                  name:
                    type: string
                  url:
                    type: string
            evidenceLink:
              type: string
            evidenceDescription:
              type: string
            duration:
              type: string
            credentialType:
              type: string
            achievement:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: array
                    items:
                      type: string
                  criteria:
                    type: object
                    properties:
                      narrative:
                        type: string
                  description:
                    type: string
                  name:
                    type: string
                  image:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                        enum:
                          - Image
        proof:
          type: object
          properties:
            type:
              type: string
            created:
              type: string
              format: date-time
            verificationMethod:
              type: string
            proofPurpose:
              type: string
            proofValue:
              type: string
        sameAs:
          type: object
          properties:
            id:
              type: string
            did:
              type: string

  responses:
    Authentication:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    Message:
      type: object
      properties:
        message:
          type: string
    Error:
      type: object
      properties:
        message:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - Claims
  - Authentication
